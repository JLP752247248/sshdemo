<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	    http://www.springframework.org/schema/security
	    http://www.springframework.org/schema/security/spring-security-3.2.xsd"
       default-lazy-init="true">
    <security:http security="none" pattern="/login/login.jsp"/>
    <security:http security="none" pattern="/restfulapi/mytest/**"/>
    <security:http auto-config="true" >
        <security:form-login login-page="/login/login.jsp" authentication-failure-url="/login/login.jsp"
                             default-target-url="/login/mainframe.jsp" always-use-default-target="true" />
        <security:logout logout-success-url="/login/login.jsp" />

        <security:http-basic />
        <!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
      	<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="myFilter" />
    </security:http>

	<bean id="myFilter" class="com.panda.sys.security.MyFilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
        <property name="accessDecisionManager" ref="myDecisionManager" />
        <property name="securityMetadataSource" ref="mySecurityMetadataSource" />
	</bean>
    

    <!-- id = centitAccessDecisionManagerBean 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 源文件路径 com.centit.sys.security.DaoAccessDecisionManager -->
    <!-- id = centitSecurityMetadataSource 资源源数据定义，即定义某一资源可以被哪些角色访问 源文件路径 com.centit.sys.security.DaoInvocationSecurityMetadataSource -->
    <!-- id = userDetailsService认证管理数据提供， com.centit.sys.security.userdetails.DaoUserDetailsService -->


    <!-- <bean id="validateCodeAuthenticationFilter" class="com.centit.sys.security.CodeAuthenticationProcessingFilter" > </bean> l -->

    <!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
    <security:authentication-manager alias="authenticationManager">
       <security:authentication-provider ref="authenticationProvider"/>
    </security:authentication-manager>

	<bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService"></property>
		<property name="hideUserNotFoundExceptions" value="false"></property>
	</bean>
	


</beans>
